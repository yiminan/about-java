"5개 이하의 Public Method만 사용해야합니다"

OOP에서는 데이터를 대체하는 객체가 가장 중요한 지위를 차지합니다.
절차지향프로그래밍과 같이 명령, 문장, 연산자는 더 이상 데이터를 책임지지 않습니다.

가장 우아하고, 유지보수가 가능하고, 응집력이 높으면서, 테스트하기도 용이한 객체는 작은 객체입니다.
물론 앞서 클래스는 250줄이 넘으면 안된다고 했지만 이건 상징적 제약입니다.
예를 들어, 하나의 클래스에 1개 Public method 와 20개의 Private method가 있으면, 이건 작은 객체입니다.

즉, 사실 기준은 코드 줄 수에 있는 것이 아니라 Public method가 얼마나 적게 있느냐입니다.
개인적으로 적절하다고 생각하는 Public method의 갯수는 클래스당 5개 이하입니다.
여기서 Public method는 Protected method를 포함합니다.
Public method가 5개를 넘어가게되면 이 클래스는 문제가 있다고 보고 리팩토링이 필요하다고 보면 됩니다.

클래스를 작게 만들어서 얻는 이득은 실수할 가능성과 리팩토링시 결합도가 있는 객체들과 유지보수에 큰 장점이 있습니다.
각각의 메서드가 객체의 진입점이고 진입점의 수가 적다면 문제를 더 쉽게 고립시킬 수 있습니다.
작은 클래스는 테스트하기도 쉽고, 모든 사용 시나리오를 쉽게 재현할 수 있으면, 클래스가 작기 때문에 사용 시나리오의 수도 적습니다.
예를 들어, 클래스에 1개의 public method만 있다면 테스트도 쉽게 작성할 수 있습니다. 만약 public method가 10개라면...-_-

요약)
"무조건 하나의 클래스에는 5개 이하의 Public Method만 사용해야합니다"
